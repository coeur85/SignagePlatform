#pragma checksum "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/Pages/Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f8cdd9d1e42109bd65981aa4873df7513f9e496a"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ScreenWebApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using ScreenWebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/_Imports.razor"
using ScreenWebApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/Pages/Index.razor"
using ScreenWebApp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/Pages/Index.razor"
using ScreenWebApp.Components;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 30 "/Users/magdi/Documents/repo/SignagePlatformApp/ScreenWebApp/Pages/Index.razor"
          
    private  List<PictureModel> _pics = new List<PictureModel>(); 
    private VideoModel Video {get;set;} = new VideoModel();
    private object appInstance ;
    
        protected override async Task OnInitializedAsync()
        {
             appInstance = DotNetObjectReference.Create(this);
            
             await LoadData();
            
        }

        protected async Task LoadData(){
            _pics = await iPic.PictureArray();    
            Video = await iVid.FirstVideo();
           
            
        }

        [JSInvokable]
        public async  Task CheckForPicturesUpdate(){   
            var model = await iPic.CheckForUpdate(_pics);
            if(model.ChangedState){
               // await js.InvokeVoidAsync("disposeSlider");
                _pics = model.Pictures;
               // this.StateHasChanged();
            }
        }    
        
         [JSInvokable]
        public async  Task CheckForVediosUpdate(){   
            var model = await iVid.NextVideo(Video);
            if(model.ChangedState){
                Video = model.VideoModel;
             //   this.StateHasChanged();
            }
        }  

        protected override void OnAfterRender(bool firstRender)
        {
            if(firstRender){
                Task.Run(()=> js.InvokeVoidAsync("initAppistance",appInstance));
                Task.Run(()=> js.InvokeVoidAsync("initSlideShow"));
                
            }
            
        }


    

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ScreenWebApp.Interfaces.iVideo iVid { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ScreenWebApp.Interfaces.iPicture iPic { get; set; }
    }
}
#pragma warning restore 1591
