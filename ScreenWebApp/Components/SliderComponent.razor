@using ScreenWebApp.Models

@page "/SliderComponent"



 <div class="carousel slide" data-ride="carousel" data-pause="false" id="slide_@ActiveSlide" >
    <div class="carousel-inner"> 

        @for (int i = 0; i < Pictures.Count; i++)
        {
            
            string active = ( i == ActiveSlide) ? "active":  "";
            
                <div class="carousel-item @active" >
                  
                        <img src="@Pictures[i].Base64" class="img-thumbnail bgomlaAddImg"  />
                </div>    
            
        }     
    </div>            
                             
 </div> 



 
 @code{
     
    [Parameter]
    public List<PictureModel> Pictures {get;set;}  
    [Parameter]
    public int ActiveSlide {get;set;}
   // [Parameter]
   // public object AppInstance {get;set;}


   // protected override async Task OnAfterRenderAsync(bool firstRender)
      //  {
         //   if(firstRender){
         //       if(ActiveSlide == 0){
        //        await js.InvokeVoidAsync("initSlideShowZero", ActiveSlide, AppInstance );
        //        }
        //        else{
         //           await js.InvokeVoidAsync("initSlideShow", ActiveSlide);
         //       }
      //      }
       //     
            
     //   }
    
    

 }